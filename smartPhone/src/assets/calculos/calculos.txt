function blurTermometroSeco10(termometroSeco10){
	termometroSeco10.error="";
	if(termometroSeco10.value!="" ){
		var test2Decimal=/^(\+|-)?\d+(\.\d{2})$/.test(termometroSeco10.value);
		if(!test2Decimal){
			termometroSeco10.error="Debe ser decimal de doble precicion";
		}
		else{
			if(parseFloat(termometroSeco10.value)<=45 && parseFloat(termometroSeco10.value)>=25){
				if(termometroSeco10.value[0]=='+'){
					termometroSeco10.value=termometroSeco10.value.substr(1);
				}
			}else{
				termometroSeco10.error="Fuera del rango (25 - 45)";
			}
			
		}
	}
}


<->


function blurTermometroSeco15(termometroSeco15){
	termometroSeco15.error="";
	if(termometroSeco15.value!="" ){
		var test2Decimal=/^(\+|-)?\d+(\.\d{2})$/.test(termometroSeco15.value);
		if(!test2Decimal){
			termometroSeco15.error="Debe ser decimal de doble precicion";
		}
		else{
			if(parseFloat(termometroSeco15.value)<=45 && parseFloat(termometroSeco15.value)>=25){
				if(termometroSeco15.value[0]=='+'){
					termometroSeco15.value=termometroSeco15.value.substr(1);
				}
			}else{
				termometroSeco15.error="Fuera del rango (25 - 45)";
			}
			
		}
	}
}


<->

function blurTermometroHumedo10(termometroHumedo10){
	termometroHumedo10.error="";
	if(termometroHumedo10.value!="" ){
		var test2Decimal=/^(\+|-)?\d+(\.\d{2})$/.test(termometroHumedo10.value);
		if(!test2Decimal){
			termometroHumedo10.error="Debe ser decimal de doble precicion";
		}
		else{
			if(parseFloat(termometroHumedo10.value)<=0 && parseFloat(termometroHumedo10.value)>=-20){
				if(termometroHumedo10.value[0]=='+'){
					termometroHumedo10.value=termometroHumedo10.value.substr(1);
				}
			}else{
				termometroHumedo10.error="Fuera del rango (-20 - 0)";
			}
			
		}
	}
}


<->

function blurTermometroHumedo15(termometroHumedo15){
	termometroHumedo15.error="";
	if(termometroHumedo15.value!="" ){
		var test2Decimal=/^(\+|-)?\d+(\.\d{2})$/.test(termometroHumedo15.value);
		if(!test2Decimal){
			termometroHumedo15.error="Debe ser decimal de doble precicion";
		}
		else{
			if(parseFloat(termometroHumedo15.value)<=0 && parseFloat(termometroHumedo15.value)>=-20){
				if(termometroHumedo15.value[0]=='+'){
					termometroHumedo15.value=termometroHumedo15.value.substr(1);
				}
			}else{
				termometroHumedo15.error="Fuera del rango (-20 - 0)";
			}
			
		}
	}
}

<->

function calcular10(termometroSeco10,termometroHumedo10,resultado10){
	if(termometroSeco10.value && termometroHumedo10.value)
	resultado10.value=parseFloat(termometroSeco10.value)-parseFloat(termometroHumedo10.value);
}


<->

function calcular15(termometroSeco15,termometroHumedo15,resultado15){
	if(termometroSeco15.value && termometroHumedo15.value)
	resultado15.value=parseFloat(termometroSeco15.value)-parseFloat(termometroHumedo15.value);
}

<->


function validateNegativeInputNumber(item1){
	if(item1.value!=''){
		var numero = parseFloat(item1.value);
		if(isNan(numero)) {
			item1.error='EL VALOR QUE INGRESÓ NO ES UN NÚMERO';
		} else if((!isNan(numero)) && (numero > 0)) {
			item1.error='';
		} else if((!isNan(numero)) && (numero <= 0)){
			item1.error='EL VALOR DEBE SER POSITIVO';
		}
	}
}

function validateLengthInputText(item1){if(item1.value!='' && item1.value.length<=5){item1.error='EL STRING DEBE TENER MÁS DE 5 CARACTERES';}}

input
ionBlur	Emitted when the input loses focus.
ionChange	Emitted when the value has changed.
ionFocus	Emitted when the input has focus.
ionInput	Emitted when a keyboard input ocurred.

select
ionCancel	Emitted when the selection is cancelled.

function validateNegativeInputNumber(item1){
	if(item1.value!=''){
		var numero=parseFloat(item1.value);
		if(isNaN(numero)){
			item1.error='EL VALOR QUE INGRESÓ NO ES UN NÚMERO';
			return 1;
		}else if((!isNaN(numero))&&(numero > 0)){
			item1.error='';
			return 0;
		}else if((!isNaN(numero))&&(numero <= 0)){
			item1.error='INGRESE UN TELÉFONO VÁLIDO';
			return 1;
		}
	}
	return 0;
}

function validateCondition(item1,item2){if(item1.value!='' && item1.value=='SI'){item2.show=true;}return 0;}

function validateCheckboxInput(item1){
	for(hijo of item1.children) {
		if((hijo.checked && hijo.text=='') || (hijo.value!='' && hijo.text=='')) {
			item1.error='INGRESE QUIÉN PROPORCIONA';
		} 
	}
}

function validateDayHour(item1){
	if(item1.value!=''){
		var numero=parseFloat(item1.value);
		if(isNaN(numero)){
			item1.error='EL VALOR QUE INGRESÓ NO ES UN NÚMERO';
			return 1;
		}else{
			if(numero>=0 && numero<=24){
				item1.error='';
				return 0;
			}else{
				item1.error='INGRESE UN NÚMERO VÁLIDO';
				return 1;
			}
		}
	}
	return 0;
}

function validateWeekDay(item1){
	if(item1.value!=''){
		var numero=parseFloat(item1.value);
		if(isNaN(numero)){
			item1.error='EL VALOR QUE INGRESÓ NO ES UN NÚMERO';
			return 1;
		}else{
			if(numero>=0 && numero<=7){
				item1.error='';
				return 0;
			}else{
				item1.error='INGRESE UN NÚMERO VÁLIDO';
				return 1;
			}
		}
	}else{item.error='';}
	return 0;
}

function validateCondition2(item1,item2,item3){
	if(item1.checked==false){
		item2.show=true;
		item3.show=true;
	}else{
		item2.show=false;
		item2.value='';
		item2.error='';
		item3.show=false;
		item3.children[0].checked=false;
		item3.children[1].error='';
		item3.children[1].value='';
		item3.children[2].error='';
		item3.children[2].value='';
	}
	return 0;
}

function validateEmptyNumberCheckbox(item1){
	if(item1.children.length==2){
		if(item1.children[0].checked==false && item1.children[1].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}
	}else{
		if(item1.children[0].checked==false && item1.children[1].value=='' && item1.children[2].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}
	}
	return 0;
}

function validateEmptyNumberCheckbox(item1){
	if(item1.children.length==2){
		if(item1.children[0].checked==false && item1.children[1].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}else{
			item1.error='';
		}
	}else{
		if(item1.children[0].checked==false && item1.children[1].value=='' && item1.children[2].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}else{
			item1.error='';
		}
	}
	return 0;
}

function validateEmptyRadioTitle(item1){
	var err1=0;
	var err2=0;
	if(item1.show && item1.children[0].value==''){
		item1.children[0].error='ESTA PREGUNTA ES OBLIGATORIA';
		err1=1;
	}else if(item1.show && item1.children[0].value!=''){
		item1.children[0].error='';
		err1=0;
	}else if(item1.show && item1.children[1].value==''){
		item1.children[1].error='ESTA PREGUNTA ES OBLIGATORIA';
		err2=1;
	}else if(item1.show && item1.children[1].value!=''){
		item1.children[1].error='';
		err2=0;
	}
	return err1 || err2;
}

function validateEmptyRadio(item1){
		if(item1.show && item1.value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}else{
			item1.error='';
			return 0;
		}
	
	return 0;
}

function validateCondition3(item1){
	for(var hijo of item1.children){
		if(hijo.checked==true){
			item1.error='';
			return 0;
		}
	}
	item1.error='ESTA PREGUNTA ES OBLIGATORIA';
	return 1;
}

function calculateIMC(item1,item2,item3){
	if(item1.value!='' && item2.value!=''){
		var peso=parseFloat(item1.value);
		var talla=parseFloat(item2.value);
		if(!isNaN(peso) && !isNaN(talla)){
			if(peso>0 && talla>0){
				var imc=(peso/(talla*talla));
				item3.value=imc;
				if(imc<18.5){
					item3.clasification='BAJO PESO';
					item3.risk='AUMENTADO';
				}else if(imc>=18.5 && imc <=24.9){
					item3.clasification='NORMAL';
					item3.risk='PROMEDIO';
				}else if(imc>=25 && imc <=29.9){
					item3.clasification='SOBREPESO';
					item3.risk='AUMENTADO';
				}else if(imc>=30 && imc <=34.9){
					item3.clasification='OBESIDAD TIPO I';
					item3.risk='MODERADO';
				}else if(imc>=35 && imc <=39.9){
					item3.clasification='OBESIDAD TIPO II';
					item3.risk='SEVERO';
				}else if(imc>=40){
					item3.clasification='OBESIDAD TIPO III';
					item3.risk='MUY SEVERO';
				}
				return 0;
			}
		}
	}
	item3.value='';
	item3.clasification='';
	item3.risk='';
}

function diagnosePerimeter(item1,item2){
	if(item1.value!=''){
		var perimetro=parseFloat(item1.value);
		if(!isNaN(perimetro) && perimetro>=0){
			item2.value=perimetro;
			if(perimetro>=0 && perimetro<=11.5){
				item2.clasification='DESNUTRICIÓN AGUDA SEVERA';
			}else if(perimetro>11.5 && perimetro<=12.5){
				item2.clasification='DESNUTRICIÓN AGUDA MODERADA';
			}else if(perimetro>12.5 && perimetro<=13.5){
				item2.clasification='DESNUTRICIÓN AGUDA LEVE O EN RIESGO';
			}else if(perimetro>13.5){
				item2.clasification='NORMAL';
			}
			return 0;
		}
	}
	item2.value='';
	item2.clasification='';
}

function validateCheckboxes(item1){
	for(var ch of item1.children){
		if(ch.checked==true){
			return 0;
		}
	}
	return 1;
}

function validateCondition2(item1,item2,item3){
	if(item1.checked==false){
		item2.show=true;
		item3.show=true;
		item3.children[1].show=true;
		item3.children[2].show=true;
	}else{
		item2.show=false;
		item2.value='';
		item2.error='';
		item3.show=false;
		item3.error='';
		item3.children[0].checked=false;
		item3.children[1].error='';
		item3.children[1].value='';
		item3.children[1].show=false;
		item3.children[2].error='';
		item3.children[2].value='';
		item3.children[2].show=false;
	}
	return 0;
}

function validateEmptyNumberCheckbox(item1){
	if(item1.children.length==2){
		if(item1.children[0].checked==false && item1.children[1].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}else{
			item1.error='';
		}
	}else{
		if(item1.children[0].checked==false && item1.children[1].value=='' && item1.children[2].value==''){
			item1.error='ESTA PREGUNTA ES OBLIGATORIA';
			return 1;
		}else{
			item1.error='';
		}
	}
	return 0;
}